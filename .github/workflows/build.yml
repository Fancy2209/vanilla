name: Build
on:
  push:
    paths-ignore:
    - 'README.md'
  pull_request:
    paths-ignore:
    - 'README.md'
jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install build-essential ninja-build cmake \
          libgles2-mesa-dev libegl1-mesa-dev nasm
    
    # - name: Restore cached Primes
    #   id: cache-primes-restore
    #   uses: actions/cache/restore@v4
    #   with:
    #     path: |
    #       path/to/dependencies
    #       some/other/dependencies
    #     key: ${{ runner.os }}-primes
    # - name: Save Primes
    #   id: cache-primes-save
    #   uses: actions/cache/save@v4
    #   with:
    #     path: |
    #       path/to/dependencies
    #       some/other/dependencies
    #     key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}
    
    - name: Install Qt 6
      run: |
        git clone --branch 6.7.1 --depth 1 git://code.qt.io/qt/qt5.git qt6
        cd qt6
        perl init-repository --module-subset=qtbase,qtmultimedia,qtshadertools
        mkdir qt6-build
        cd qt6-build
        ../configure -prefix $GITHUB_WORKSPACE/AppDir/usr
        cmake --build . --parallel
        cmake --install .
    
    - name: Install SDL2
      run: |
        git clone --branch release-2.30.3 --depth 1 https://github.com/libsdl-org/SDL.git
        cd SDL
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/AppDir/usr
        make
        make install
      
    - name: Install FFmpeg
      run: |
        git clone --branch n7.0 --depth 1 https://git.ffmpeg.org/ffmpeg.git ffmpeg
        cd ffmpeg
        ./configure --prefix=$GITHUB_WORKSPACE/AppDir/usr --disable-static --disable-avdevice --enable-shared --disable-programs
        make
        make install
    
    # Need to get dhclient in there somehow unless we switch to our own implementation
    
    - name: Configure
      run: |
        cp server/hostap/conf/wpa_supplicant.config server/hostap/wpa_supplicant/.config
        cmake . -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/AppDir/usr
    
    - name: Build
      run: |
        cmake --build build
    
    - name: Deploy
      run: |
        cmake --install build
        cd ..
        cp ../client/com.mattkc.* AppDir/
        curl -fLOSs https://github.com/AppImage/AppImageKit/releases/download/13/AppRun-x86_64
        mv AppRun-x86_64 AppDir/AppRun
        chmod +x AppDir/AppRun
        appimagetool AppDir
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        path:
          Vanilla_U-x86_64.AppImage

      
